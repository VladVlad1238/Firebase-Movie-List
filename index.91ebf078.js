let e;function t(e,t,o,i){Object.defineProperty(e,t,{get:o,set:i,enumerable:!0,configurable:!0})}function o(e){return e&&e.__esModule?e.default:e}var i="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},n={},r={},d=i.parcelRequire8b71;null==d&&((d=function(e){if(e in n)return n[e].exports;if(e in r){var t=r[e];delete r[e];var o={id:e,exports:{}};return n[e]=o,t.call(o.exports,o,o.exports),o.exports}var i=Error("Cannot find module '"+e+"'");throw i.code="MODULE_NOT_FOUND",i}).register=function(e,t){r[e]=t},i.parcelRequire8b71=d),d.register("dRo73",function(e,o){t(e.exports,"register",()=>i,e=>i=e),t(e.exports,"resolve",()=>n,e=>n=e);var i,n,r={};i=function(e){for(var t=Object.keys(e),o=0;o<t.length;o++)r[t[o]]=e[t[o]]},n=function(e){var t=r[e];if(null==t)throw Error("Could not resolve bundle with id "+e);return t}}),d("dRo73").register(JSON.parse('{"iSVqZ":"index.91ebf078.js","arPrC":"unchecked.8af5e85a.png","fQ079":"delete-btn.2b95cdbd.png"}'));var s=d("dbPBw");const a="undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);var l={randomUUID:a};const v=new Uint8Array(16),c=[];for(let e=0;e<256;++e)c.push((e+256).toString(16).slice(1));var h=function(t,o,i){if(l.randomUUID&&!o&&!t)return l.randomUUID();t=t||{};let n=t.random||(t.rng||function(){// lazy load so that environments that need to polyfill have a chance to do so
if(!e&&!// getRandomValues needs to be invoked in a context where "this" is a Crypto implementation.
(e="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)))throw Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return e(v)})();// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,o){i=i||0;for(let e=0;e<16;++e)o[i+e]=n[e];return o}return function(e,t=0){// Note: Be careful editing this code!  It's been tuned for performance
// and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
return c[e[t+0]]+c[e[t+1]]+c[e[t+2]]+c[e[t+3]]+"-"+c[e[t+4]]+c[e[t+5]]+"-"+c[e[t+6]]+c[e[t+7]]+"-"+c[e[t+8]]+c[e[t+9]]+"-"+c[e[t+10]]+c[e[t+11]]+c[e[t+12]]+c[e[t+13]]+c[e[t+14]]+c[e[t+15]]}(n)};class u{constructor({onMovieChanged:e,onNewMovieAdded:t,onMoviesSynced:o}){this.onMovieChanged=e,this.onNewMovieAdded=t,this.onMoviesSynced=o,this.getMovieFromFirestore()}addMovieToFirestore=async e=>{let t={id:h(),title:e,done:!1};(0,s.addDataToFirestore)(t),this.movies=await (0,s.getDataFromFirestore)(),this.onNewMovieAdded(this.movies)};getMovieFromFirestore=async()=>{if(this.movies=await (0,s.getDataFromFirestore)(),this.movies.length<=0){console.log("This database does not exist");return}this.onMoviesSynced(this.movies)};deleteMovieFromFirestore=async e=>{await (0,s.deleteDataFromFirestore)(e),this.movies=await (0,s.getDataFromFirestore)(),this.onMovieChanged(this.movies)};updateMovieInFirestore=e=>{let t=this.movies.find(t=>t.id===e),o=!t.done;t.done=o,(0,s.updateDataInFirestore)(e,o),this.onMovieChanged(this.movies)}}var m={};m=new URL(d("dRo73").resolve("arPrC"),import.meta.url).toString();var M={};M=new URL(d("dRo73").resolve("fQ079"),import.meta.url).toString();class p{constructor({onNewMovie:e,onDeleteMovie:t,onDoneMovie:o}){this.moviesListNode=document.querySelector("#movie-list"),this.movieNameInputNode=document.querySelector("#movie-input"),this.addMovieBtnNode=document.querySelector("#add-movie-btn"),this.deleteMovieBtn=document.querySelector(".delete__button"),this.addMovieBtnNode.addEventListener("click",this.addBtnHanlder),this.moviesListNode.addEventListener("click",this.deleteMovie),this.moviesListNode.addEventListener("click",this.doneMovie),this.onNewMovie=e,this.onDeleteMovie=t,this.onDoneMovie=o}renderMovies(e){this.moviesListNode.innerHTML="",e.forEach(e=>{let t=e.done?"movie__list-container movie__list-container-done":"movie__list-container";this.moviesListNode.innerHTML+=`
      <div id="${e.id}" class="${t}">
        <div class="checked__button-wrapper">
          <button class="checked__button" data-action="done">
              <img class="checked__button-img" src="${/*@__PURE__*/o(m)}" alt="checked button">
          </button>
            <p class="movie__name">${e.title}</p>
        </div>
        <div class="delete__button-wrapper">
            <button class="delete__button" data-action="delete" type="button">
                <img class="delete__btn-img" src="${/*@__PURE__*/o(M)}" alt="Delete button image">
            </button>
      </div>
      `})}getMovieName=()=>{let e=this.movieNameInputNode.value.trim();if(""===e)return alert("Write the name of movie");this.onNewMovie(e)};deleteMovie=async e=>{if("delete"===e.target.dataset.action){let t=e.target.closest(".movie__list-container"),o=t.id;this.onDeleteMovie(o)}};doneMovie=e=>{if("done"!==e.target.dataset.action)return;let t=e.target.closest(".movie__list-container"),o=t.id;t.classList.toggle("movie__list-container-done"),this.onDoneMovie(o)};addBtnHanlder=()=>{this.getMovieName(),this._clearInput()};_clearInput=()=>{this.movieNameInputNode.value="",this.movieNameInputNode.focus()}}new class{constructor(){this.model=new u({onMovieChanged:this.handleModelMovieChanged,onNewMovieAdded:this.handleModelMovieAdded,onMoviesSynced:this.handleModelMoviesSynced}),this.view=new p({onNewMovie:this.handleViewNewMovie,onDeleteMovie:this.handleViewDeletMovie,onDoneMovie:this.handleViewDoneMovie})}handleModelMovieChanged=e=>{this.view.renderMovies(e)};handleModelMoviesSynced=async e=>{this.view.renderMovies(e)};handleModelMovieAdded=async e=>{this.view.renderMovies(e)};handleViewNewMovie=e=>{this.model.addMovieToFirestore(e)};handleViewDeletMovie=e=>{this.model.deleteMovieFromFirestore(e)};handleViewDoneMovie=e=>{this.model.updateMovieInFirestore(e)}};